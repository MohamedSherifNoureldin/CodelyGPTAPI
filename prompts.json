{
    "evaluateCodeSpaceComplexity":  " Given this code: {code} written in {programming_language} that does the following functionality: {functionality}, indicate the space complexity and provide an explanation. Also, return the optimum space complexity for this function. Return the response in CSV format only of 2 columns. The first Row should include 'space complexity', followed by the provided codes space complexity. The second row should include: “Optimum Space Complexity”, followed by the optimum codes space complexity. The third row should inclue 'Comments' in the first column, followed by the comments enclosed in quotations on how it could be improved and explanation of complexities. Only the comments must be enclosed in quotes and avoid returning any commas in the comments. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Make sure each line contains a single row and avoid returning empty lines. \n Example Response:\nspace complexity, O(n)\nOptimum Space Complexity, O(1)\nComments, \"This can be improved by using a hash map to store the values instead of an array. This will reduce the space complexity to O(1)\"",
    "evaluateCodeTimeComplexity": " Given this code: {code} written in {programming_language} that does the following functionality: {functionality}, indicate the time complexity and provide an explanation. Also, return the optimum space complexity for this function. Return the response in CSV format only of 2 columns. The first Row should include “tpace complexity”, followed by the provided code's time complexity. The second row should include: “Optimum Time Complexity”, followed by the optimum codes time complexity. The third row should inclue \"Comments\" in the first column, followed by the comments as a single line (paragraph) enclosed in quotations on how it could be improved and explanation of complexities. Only the comments must be enclosed in quotes and avoid returning any commas in the comments after connectors or any commos at all except as CSV delimeters. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Make sure each line contains a single row and avoid returning empty lines.\n Example Response:\n Time Complexity, O(n)\nOptimum Time Complexity, O(log n)\nComments, \"This can be improved by using a binary search instead of a linear search. This will reduce the time complexity to O(log n)\"",
    "evaluateCodeOverall": " Given the following code: {code} written in {programming_language}, It is supposed to {functionality}. Comment on its efficiency, correctness, and how it can be improved if applicable. Don't return a header row. Return the response in CSV format only of 2 columns and exactly one row. This single row should include the overall score in the first column while the comments are returned as a single string in the second column. The comments should be enclosed in quotations and avoid returning any commas in the comments or the overall score. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters.\n Example Response:\n Overall Score, 8/10\nComments, \"The code is correct and efficient but can be improved by using a binary search instead of a linear search. This will reduce the time complexity to O(log n)\"",
    "evaluateCodeOptimumCode": " Given the following problem description {functionality} written in {programming_language}, Generate a code that solves this problem with the optimal time and space complexity. Return the response in CSV format of 2 columns and a single row.  The single row should include: \"Generated Code\" in the first column, followed by the actual generated code enclosed in quotations in the second column. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters. If the actual code contains commas for example as a seperator of function arguments or anywhere else replace them #comma#. Make sure each line contains a single row and avoid returning empty lines. If the code needs newlines replace them with #newline#\nExample response:\nGenerated Code, \"def main():#newline# print(\"hello world!\")\"",
    "evaluateCodePossibleBugs": " Given the following code: {code}, It is supposed to {functionality}. Detect any possible bugs that will cause any syntax, logical, or run-time error. Return the response in CSV format of 2 columns and a single row.  The single row should include: \"Bugs\" in the first column, followed by all the bugs enclosed in quotations in the second column.  Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters. Make sure each line contains a single row and avoid returning empty lines. ",
    "generateQuizGenerateQuestionANDAnswers": " Generate a 5 MCQ quiz about {programming_language} that addresses {topic}. The test should be of {difficulty_level} difficulty. The MCQ quiz should have for each question exactly 4 answer choices labeled with letters a,b,c and d.  Generate the answers of the quiz in CSV format with exactly 3 columns and 5 rows. The first column should include the mcq question, while the second column should include the choices labelled with letters a,b,c and d, and the third column should include the correct answer letter. In the second column don't seperate the choices with commas and don't seperate them with newlines instead seperate them with \"#newline#\". Don't include any new lines in the question or the answer choices and if needed return \"#newline#\" instead to indicate a new line. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters. Don't forget to include the delimeter. Make sure each line contains a single row and avoid returning empty lines. E.g. of a valid row that you should exactly mimic in format and style (except for the actual question and answers) (the delimeter is the comma): \n \"What is the output of the following code?#newline#int x = 5;#newline#int y = 6;#newline#int z = x + y;#newline#System.out.println(z);\" , \"a) 11#newline#b) 12#newline#c) 13#newline#d) 14\" , \"a\" ",
    "generateQuizExplainWrongAnswers": " Here are some questions, their correct answers, and a given user answer. Given in CSV format with exactly 3 columns. The first column is the mcq question, the second column is the choices labelled with letters a,b,c and d, and the third is the user's wrong answer letter. Explain why the given user answer is wrong and suggest possible areas of improvement.  Return the response in CSV format with exactly 1 column and a row for each question provided. This column should include the explanation and suggestions for the question enclosed in quotations. If the CSV provided contains n rows then this means that the response should contain n rows as well. Explanation and suggestions should be seperated by question as different rows and should be enclosed in quotations. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters. Don't forget to include the delimeter. Make sure each line contains a single row and avoid returning empty lines. CSV Data: {csvData} ",
    "generateQuizCodeProblem": "I want you to generate a detailed coding problem description for the {programming_language} programming_language, testing the topic of {topic} and having a difficulty level of {difficulty_level}. The problem should be a coding problem that requires the user to write code to solve it. The response format should be in CSV format with exactly 1 column and 1 row. The single row should include the problem description enclosed in quotations. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas at all. Avoid returning empty lines. ",
    "generateTestCases": " Given this code: {code} written in {programming_language} that does the following functionality: {functionality}, generate 10 test cases for the provided code according to the functionality.  The test case should have the following format: 'Input: input data, Expected Output: expected output data' Return the response in CSV format only of 1 column and 10 rows. Each row should include a single test case enclosed in quotations and doesn't contain new lines. Don't return a header row. Only respond in CSV format with no extra paragraphs or explanations. Avoid returning any commas except as csv delimeters. Don't forget to include the delimeter. Make sure each line contains a single row and avoid returning empty lines. "
}